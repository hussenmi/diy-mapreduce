at our application by using service. Right? So let's do that. 
And we call the service flask service. And it just basically gives us a little bit tutorial. So best. And that's it. 
Right. So this is our basic version of the app, we just used Kubernetes to create a deployment and interact with that using 
the service. Right. 
I want to showcase a different version of our app. By that, I mean, I want to showcase if we're getting a lot of requests 
how Kubernetes should be able to balance the load between the different parts that we have. 
And for that, we have this script right here. And let's see what it does. Right. So this looks like a lot, but it's not that 
bad. Just bear with me. I'll describe what it does. 
So let's bring them up into two portions because they're basically the same. So let's discuss this first. So what it does is 
just basically increase the number of all because that we have to for. So we already had we have to originally and we're 
increasing it to four. 
And the sleep part is just for it to stabilize. So don't worry about that too much. What this part does is. So what this 
part does is just basically connect with our services for us to be able to request from outside the cluster to submit requests 
outside the cluster and interact with our cluster basically. 
And this right here is just basically simulating a request from outside the cluster to to our app that we just created. 
So let's assume that we have five customers that are requesting our app. 
And how do we balance the load between the different servers that we have. So this is what we're busy. Well, we'll be seeing 
right here when we run this. And then after that, I wanted to also show what happens if one of the parts like dice suddenly, 
right. 
And to simulate that will just be deleting one of the parts. So delete one part. And then we're going to be simulating the 
requests again and see what happens. And after that, we'll get the number of parts that we have. And if you remember, one of 
the benefits of Kubernetes is that even if one of the parts go down, it will automatically detect that and bring the number 
of parts we have to our desired state, which is four in this case. 
So we'll just see that we will have four applications even after deleting a part or if the part fails. Right. So to do that, 
let me just change our app version from the normal version to the load balanced demo version. 
This is just basically useful for us to see the different parts that are using the images. And that just basically deletes 
the deployment and the service and just allows us to start fresh. 
So, um, is just basically tear down Kubernetes. So that we start fresh. And then now let's bring up Kubernetes again with 